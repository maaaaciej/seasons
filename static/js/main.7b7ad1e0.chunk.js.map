{"version":3,"sources":["SeasonDisplay.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","className","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","class","renderContent","React","Component","ReactDOM","render","document","querySelector"],"mappings":"+LAEMA,G,MAAe,CACnBC,OAAQ,CACNC,KAAK,uBACLC,SAAS,OAEXC,OAAQ,CACNF,KAAK,mBACLC,SAAS,eAuBEE,EAZO,SAACC,GACrB,IARiBC,EAAKC,EAQhBC,GARWF,EAQQD,EAAMC,KARTC,GAQc,IAAIE,MAAOC,YAPnC,GAAKH,EAAQ,EAChBD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAGC,EAEJP,EAAaS,GAAhCP,EAFuB,EAEvBA,KAAMC,EAFiB,EAEjBA,SACd,OACE,yBAAKS,UAAS,yBAAoBH,IAChC,uBAAGG,UAAS,4BAAuBT,EAAvB,WACZ,4BAAKD,GACL,uBAAGU,UAAS,6BAAwBT,EAAxB,aCtBZU,E,4MACJC,MAAQ,CACNP,IAAK,KACLQ,aAAc,I,kEAGK,IAAD,OAClBC,OAAOC,UAAUC,YAAYC,oBAC3B,SAACC,GAAD,OAAc,EAAKC,SAAS,CAAEd,IAAKa,EAASE,OAAOC,cACnD,SAACC,GAAD,OAAS,EAAKH,SAAS,CAAEN,aAAc,+B,sCAIzC,OAAIU,KAAKX,MAAMC,eAAiBU,KAAKX,MAAMP,IAClC,6BAAMkB,KAAKX,MAAMC,cACfU,KAAKX,MAAMP,MAAQkB,KAAKX,MAAMC,aAChC,kBAAC,EAAD,CAAeR,IAAKkB,KAAKX,MAAMP,MAGpC,yBAAKmB,MAAM,uBACT,yBAAKA,MAAM,6BACT,yBAAKA,MAAM,kBAAX,YAEF,+B,+BAMN,OAAO,6BAAMD,KAAKE,qB,GA7BJC,IAAMC,WAiCxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.7b7ad1e0.chunk.js","sourcesContent":["import \"./SeasonDisplay.css\";\nimport React from \"react\";\nconst seasonConfig = {\n  summer: {\n    text: `Let's hit the beach!`,\n    iconName: `sun`,\n  },\n  winter: {\n    text: `Burr! It's cold!`,\n    iconName: `snowflake`,\n  },\n};\n\nconst getSeason = (lat, month) => {\n  if (month > 2 && month < 9) {\n    return lat > 0 ? \"summer\" : \"winter\";\n  } else {\n    return lat > 0 ? \"winter\" : \"summer\";\n  }\n};\nconst SeasonDisplay = (props) => {\n  const season = getSeason(props.lat, new Date().getMonth());\n  const { text, iconName } = seasonConfig[season];\n  return (\n    <div className={`season-display ${season}`}>\n      <i className={`icon-left massive ${iconName} icon`} />\n      <h1>{text}</h1>\n      <i className={`icon-right massive ${iconName} icon`} />\n    </div>\n  );\n};\n\nexport default SeasonDisplay;\n","\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SeasonDisplay from \"./SeasonDisplay\";\n\nclass App extends React.Component {\n  state = {\n    lat: null,\n    errorMessage: \"\",\n  };\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(\n      (position) => this.setState({ lat: position.coords.latitude }),\n      (err) => this.setState({ errorMessage: \"Something went wrong!\" })\n    );\n  }\n  renderContent() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return <div>{this.state.errorMessage}</div>;\n    } else if (this.state.lat && !this.state.errorMessage) {\n      return <SeasonDisplay lat={this.state.lat} />;\n    } else {\n      return (\n        <div class=\"ui loading  segment\">\n          <div class=\"ui active inverted dimmer\">\n            <div class=\"ui text loader\">Loading</div>\n          </div>\n          <p></p>\n        </div>\n      );\n    }\n  }\n  render() {\n    return <div>{this.renderContent()}</div>;\n  }\n}\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}